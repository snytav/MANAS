#ifndef MANAS_RUN_CONTROL_H
#define MANAS_RUN_CONTROL_H

//#define CURRENT_TENSOR_MOVE_PRINTS

//#define CHECK_VECTOR_FIELDS

//#define WRONG_CURRENT_CHECK

//#define DEBUG_FIELD_COMPONENT_PRINTS

#define BEAM 454545

#define PLASMA -454545

#define BEAM_PLASMA BEAM

#define GPU_PLASMA_CODE

#define DEBUG_PLASMA

//#define DEBUG_WHOLE_PARTICLE_LIST

#define FORTRAN_NUMBER_OF_SMALL_STEPS 1

#define MINOR_STEPS   1

#define TOTAL_STEPS  2

#define FREE_RAM_MONITOR

//#define FIELDS_DEBUG_OUTPUT

#define TOLERANCE_DIGITS_AFTER_POINT 15

#define FORTRAN_NUMBER_OF_PARTICLES 320000

#define PARTICLE_BLOCK_X_SIZE 512

//#define ADD_BEAM_INITIAL_PARTICLE_PRINTS

//#define DEBUG_INITIAL_PARTICLE_PRINTS

//#define READ_DEBUG_PRINTS

//#define CHECK_ARRAY_DETAIL_PRINTS

#define COMPARE_PRINTS

//#define TRANSFER_OUTPUT

//#define BEAM_ADD_PRINTS

//#define DEBUG_INITIAL_PARTICLE_PRINTS

//#define PARTICLE_PRINTS

//#define PARTICLE_PRINTS1000

//#define DEBUG_PLASMA_FIELDS
//#define DEBUG_PLASMA_EFIELDS

//#define DEBUG_PLASMA_STEP_FIELDS

//#define DEBUG_PLASMA_STEP_FIELDS_EMH2

#define START_STEP_NUMBER 1

//#define TOLERANCE 1e-5

#define ABSOLUTE_TOLERANCE 1e-15

#define PARTICLE_TOLERANCE 1e-10

#define INITIAL_PARTICLE_TOLERANCE 1e-13

//#define UNITY_ELECTRIC_FIELD

#define CPU_DEBUG_RUN
//#define CPU_DEBUG_RUN_PARTICLES

//#define ATTRIBUTES_CHECK

#define WRONG_CURRENTS_CHECK

//#define PARTICLE_TRACE

//#define CONTROL_POINT_CHECK
//
//#define FINAL_CONTROL_POINT_CHECK

#define PARTICLE_ATTRIBUTES 270

#define LIST_ALL_PARTICLES

#define CHECK_CONTROL_MATRIX

//#define PRINT_PARTICLE_INITIALS

#define MEMORY_PRINTS

#define PARTICLE_ARRAY_PORTION 10000

//#define PARTICLE_CELL_DEBUG_PRINTS

//#define CHECK_ARRAY_SIZE_DEBUG_PRINTS

//#define STRAY_DEBUG_PRINTS

//#define GPU_CONTROL_ALL_CELLS_CURRENTS_PRINT

//#define PERIODIC_CURRENT_PRINTS

//#define INIT_CELLS_DEBUG_PRINT

//#define PERIODIC_DEBUG_PRINTS

//#define READ_ARRAY_LOG_PRINTS

//#define CONTROL_DIFF_GPU_PRINTS

//#define jmp 320000

#define TEST_ERROR(err) if(err != cudaSuccess){printf("Error at %s:%d => %s\n", __FILE__, __LINE__, cudaGetErrorString(err)); exit(0);}

#endif
